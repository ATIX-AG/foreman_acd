export const PARAMETER_SELECTION_INIT = 'INIT_PARAMETER_SELECTION_INIT';
export const PARAMETER_SELECTION_LOCK = 'PARAMETER_SELECTION_LOCK';
export const PARAMETER_SELECTION_DELETE = 'PARAMETER_SELECTION_DELETE';
export const PARAMETER_SELECTION_ADD = 'PARAMETER_SELECTION_ADD';
export const PARAMETER_SELECTION_EDIT_ACTIVATE = 'PARAMETER_SELECTION_EDIT_ACTIVATE';
export const PARAMETER_SELECTION_EDIT_CONFIRM = 'PARAMETER_SELECTION_EDIT_CONFIRM';
export const PARAMETER_SELECTION_EDIT_CHANGE = 'PARAMETER_SELECTION_EDIT_CHANGE';
export const PARAMETER_SELECTION_EDIT_CANCEL = 'PARAMETER_SELECTION_EDIT_CANCEL';
export const PARAMETER_SELECTION_SORT = 'PARAMETER_SELECTION_SORT';
export const PARAMETER_SELECTION_LOAD_PARAM_DATA_REQUEST = 'PARAMETER_SELECTION_LOAD_PARAM_DATA_REQUEST';
export const PARAMETER_SELECTION_LOAD_PARAM_DATA_SUCCESS = 'PARAMETER_SELECTION_LOAD_PARAM_DATA_SUCCESS';
export const PARAMETER_SELECTION_LOAD_PARAM_DATA_FAILURE = 'PARAMETER_SELECTION_LOAD_PARAM_DATA_FAILURE';
export const PARAMETER_SELECTION_PARAM_TYPE_FOREMAN = 'PARAMETER_SELECTION_PARAM_TYPE_FOREMAN';
export const PARAMETER_SELECTION_PARAM_TYPE_ANSIBLE = 'PARAMETER_SELECTION_PARAM_TYPE_ANSIBLE';

// Make sure the object is sorted by value
//   (Compute Profile -> Partition table -> Root password)
export const PARAMETER_SELECTION_TYPES = {
  computeprofile: 'Compute profile',
  domain: 'Domain',
  hostparam: 'Host parameter',
  ip: 'IP',
  lifecycleenv: 'Lifecycle environment',
  ptable: 'Partition table',
  puppetenv: 'Puppet environment',
  password: 'Root password',
};
